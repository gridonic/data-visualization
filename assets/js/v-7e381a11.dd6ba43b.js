"use strict";(self.webpackChunkd3vue_cookbook=self.webpackChunkd3vue_cookbook||[]).push([[1111],{7033:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-7e381a11",path:"/guide/animations/tween-on-change.html",title:"Tween onChange",lang:"en-US",frontmatter:{},excerpt:"",headers:[],git:{updatedTime:1649914672e3,contributors:[{name:"Christian",email:"christianmoser88@gmail.com",commits:1}]},filePathRelative:"guide/animations/tween-on-change.md"}},8413:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var p=a(6252);const t=(0,p._)("h1",{id:"tween-onchange",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#tween-onchange","aria-hidden":"true"},"#"),(0,p.Uk)(" Tween onChange")],-1),e=(0,p.uE)('<p>We going to watch the activeSerie and create a interpolator from the old to the new value.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">watch</span><span class="token punctuation">(</span>activeSerie<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">tween</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> $path <span class="token operator">=</span> <span class="token function">select</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  $path\n    <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ease</span><span class="token punctuation">(</span>easeCubicInOut<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">attrTween</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token function">pathTween</span><span class="token punctuation">(</span>lineGenerator<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">function</span> <span class="token function">pathTween</span><span class="token punctuation">(</span><span class="token parameter">generator</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> interpolatedSeries <span class="token operator">=</span> series<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> yNew<span class="token punctuation">}</span><span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> yOld <span class="token operator">=</span> series<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> interpolator <span class="token operator">=</span> <span class="token function">interpolate</span><span class="token punctuation">(</span>yOld<span class="token punctuation">,</span> yNew<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">x</span><span class="token operator">:</span> x<span class="token punctuation">,</span>\n          <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token function">interpolator</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> generator<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>interpolatedSeries<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>',2),o={},c=(0,a(3744).Z)(o,[["render",function(n,s){const a=(0,p.up)("TweenOnChange");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p.Wm)(a),e],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);