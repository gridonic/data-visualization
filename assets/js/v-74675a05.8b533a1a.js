"use strict";(self.webpackChunkd3vue_cookbook=self.webpackChunkd3vue_cookbook||[]).push([[4284],{91:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-74675a05",path:"/guide/animations/drawing-effect.html",title:"Drawing Effect",lang:"en-US",frontmatter:{},excerpt:"",headers:[],git:{updatedTime:1649914672e3,contributors:[{name:"Christian",email:"christianmoser88@gmail.com",commits:1}]},filePathRelative:"guide/animations/drawing-effect.md"}},5957:(n,s,a)=>{a.r(s),a.d(s,{default:()=>d});var t=a(6252);const p=(0,t._)("h1",{id:"drawing-effect",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#drawing-effect","aria-hidden":"true"},"#"),(0,t.Uk)(" Drawing Effect")],-1),e=(0,t.Uk)("This animation is based on two SVG attributes: "),o=(0,t._)("code",null,"stroke-dasharray",-1),c=(0,t.Uk)(" and "),u=(0,t._)("code",null,"stroke-dashoffset",-1),l=(0,t.Uk)(". We change the dashoffset-value from the pathLength to zero and set the dasharray to the pathlength. This way we get this nice "),i={href:"https://www.cassie.codes/posts/creating-my-logo-animation/#heading-svg-stroke-dasharray",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("drawing effect."),k=(0,t.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> watch<span class="token punctuation">,</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> select<span class="token punctuation">,</span> easeCubicInOut <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// start the transition when everything is ready</span>\n<span class="token function">watch</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>width<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> $path <span class="token operator">=</span> <span class="token function">select</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>$path<span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> totalPathLength <span class="token operator">=</span> $path<span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTotalLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    $path\n      <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;stroke-dasharray&#39;</span><span class="token punctuation">,</span> totalPathLength<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;stroke-dashoffset&#39;</span><span class="token punctuation">,</span> totalPathLength<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">ease</span><span class="token punctuation">(</span>easeCubicInOut<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;stroke-dashoffset&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token function">tween</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>',1),b={},d=(0,a(3744).Z)(b,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon"),b=(0,t.up)("DrawingEffect");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[e,o,c,u,l,(0,t._)("a",i,[r,(0,t.Wm)(a)])]),(0,t.Wm)(b),k],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);