"use strict";(self.webpackChunkd3vue_cookbook=self.webpackChunkd3vue_cookbook||[]).push([[6855],{7894:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-7e87844d",path:"/guide/customizations/curve.html",title:"Curve",lang:"en-US",frontmatter:{},excerpt:"",headers:[],git:{updatedTime:1649914672e3,contributors:[{name:"Christian",email:"christianmoser88@gmail.com",commits:1}]},filePathRelative:"guide/customizations/curve.md"}},9191:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var t=a(6252);const p=(0,t._)("h1",{id:"curve",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#curve","aria-hidden":"true"},"#"),(0,t.Uk)(" Curve")],-1),e=(0,t.Uk)("d3 offers different curve types. More insights on "),o={href:"https://github.com/d3/d3-shape#curves",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("github"),u=(0,t.Uk)("."),l=(0,t.uE)('<p>This code-example shows a linear curve:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> line<span class="token punctuation">,</span> curveLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> lineGenerator <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> xScale<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> yScale<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y <span class="token operator">??</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">curve</span><span class="token punctuation">(</span>curveLinear<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',2),i={},r=(0,a(3744).Z)(i,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon"),i=(0,t.up)("Type");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[e,(0,t._)("a",o,[c,(0,t.Wm)(a)]),u]),(0,t.Wm)(i),l],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);